#include<stdio.h>
int Insertion_Sort(int arr[], int n)
{
   int i, key, j;
   for (i = 1; i < n; i++)
   {
       key = arr[i];
       j = i-1;
       while (j >= 0 && arr[j] > key)
       {
           arr[j+1] = arr[j];
           j = j-1;
       }
       arr[j+1] = key;
   }
}
int main()
{
	
	//initialization of variables
    int Burst_Time[20];
	int process[20];
	int Waiting_Time[20];
	int Turn_Around_Time[20];
	int Arrival_Time[20];
	int Temp;
	int Total=0;
	int pos,tq1=6,tq2=10;
	int n,i,p[20],c[20],b[20
	];
	
	//taking inputs from the console
    printf("Enter the count of processes : ");
    scanf("%d",&n);
    printf("\nEnter Arrival Time & Burst Time & Priorities.\n");
    for(int i=0;i<n;i++)
    {
        //printf("P[i+1]\n");
        printf("\nEnter Arrival Time : ");
        scanf("%d",&Arrival_Time[i]);
        printf("Enter Burst Time : ");
        scanf("%d",&Burst_Time[i]);
        printf("\n");
        b[i]=Burst_Time[i];
    }
    if(Burst_Time[0]>=tq1&&Burst_Time[1]>=tq2)
    {
	b[0]=tq1-Burst_Time[0];
    b[1]=tq2-Burst_Time[1];
	}
	else
	{
		b[0]=0;
		b[1]=0;
	}
    for(int i=0;i<n;i++)
    {
        p[i]=b[i];
    }
	Insertion_Sort(p,n);
	
    c[0]=Arrival_Time[0]+Burst_Time[0];
    
	for(i=1;i<n;i++)
    {
    	c[i]=c[i-1]+Burst_Time[i];
    }
    int T=0,W=0;
	for(i=0;i<n;i++)
    {
    Turn_Around_Time[i]=c[i]-Arrival_Time[i];
	Waiting_Time[i]=Turn_Around_Time[i]-Burst_Time[i];
	T=Turn_Around_Time[i]+T;
	W=Waiting_Time[i]+W;
	}
    printf("\nBurst_Time\tArrival_Time\tWaiting_Time\tTurn_Around_Time\tCompletion_Time");
	for(i=0;i<n;i++)
    {
	printf("\n\t%d\t\t%d\t\t%d\t\t%d\t\t%d\n",Burst_Time[i],Arrival_Time[i],Waiting_Time[i],Turn_Around_Time[i],c[i]);
	}
	printf("average waiting time = %d\n",W/n);
	printf("average turnaround time = %d\n",T/n);
	
}
